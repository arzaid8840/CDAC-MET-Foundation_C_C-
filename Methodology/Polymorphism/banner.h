class Banner
{
public:
	Banner()
	{
		width = 20;
		height = 8;
	}

	void Resize(float w, float h) 
	{
		if(width < height)
			throw width;
		width = w;
		height = h;
	}

	//A member function qualified with virtual modifer can be overridden
	//in the derived class. The address of virtual function is included
	//in the v-table generated by the compiler for the class and the
	//address of this v-table is written by the constructor into each
	//instance of that class.
	virtual double Area() const
	{
		return width * height;
	}

	//A member function qualified with static modifier can be directly
	//called on the class (using :: operator). Such a function cannot
	//refer to non-static members of its class since it does not receive
	//the 'this' parameter.
	static float Discount(int count)
	{
		return count < 50 ? 0 : 0.10;
	}

protected: //members are also visible in a derived class 
	float width;
	float height;
};

//defining ClippedBanner as a derived class of Banner (base class)
class ClippedBanner : public Banner
{
public:
	ClippedBanner(float b = 1.2) : Banner()
	{
		bevel = b;
	}

	//function overriding - defining a member function in a class which
	//matches with the declaration of a virtual function in its base class
	double Area() const
	{
		//return Banner::Area() - bevel * bevel;
		return width * height - bevel * bevel;
	}
private:
	float bevel;
};

